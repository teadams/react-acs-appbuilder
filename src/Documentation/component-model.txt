Component Models: Object containing all the component_models
  definition: Specifies the list/row/field properties
  data type: object
  precedence: (highest to lowest)
    props to component: unless specified in menu_model, will only be used at the input level. 
    component_model prop 
    component_model_name prop - component specified by the name
    default_component_model for the component
    default_component_model_name for the component - passed from component
    default_component_model for the layer 
    shell - default for everyone
    Overrides are applied per property. So a higher level only has to provide the property that will be overridden
  component_key (many):
    list, field, row: Object that contains the component_model input to use at that level
    names: (object)
      purpose(many): name of component to use for a given purposes. Individual kwys depend on the list/field/row/level
        list -
        field -
        row
    components: actual component, which will override name. (used internally not in the JSON model)
        purpose(many) - parallels component name
    props: a set of input props to use at this level. 
        (input props to the component will override depending on the level)
    default_mode: view, click_to_edit, edit, text  
        mode prop will override
        mode a) is used by field to control which type of display to use b)used to include form or not c)used to control onClick  (csv is not a mode, it is a layout and the default mode is text, row_wrap will change)
        Higher layer may impact the ones below
            Edit/text bubbles down and overrides the layers below. 
            click_to_edit forces a view/edit on the ones below depending 
            View does not bubble down.

Notes
- really decide what to name things
Other sections
- The RAB hierarhy
- api_parameters
- User object
- Subsite rules
- Roles and privileges
- Coding standards
- object model 
- field Model
- app api_parameter
-sections
- data object (including children)